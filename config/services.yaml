# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Urls
    app.api.url: 'http://localhost:8000/api'
    app.webapp.url: 'http://localhost:8080'
    # App configuration
    app.site_name: '(RE)SOURCES RELATIONNELLES'
    app.supported_locales: ['fr', 'en']
    app.timezone: '%env(APP_TIMEZONE)%'
    app.jwtsecret: '%env(JWT_PASSPHRASE)%'
    # Mailer configuration
    app.mailer.sender: 'ressources_r@cesi.fr'
    app.mailer.name: 'RR-CESI'
    # Uploads configuration
    app.user.images.path: 'uploads/users/images/'
    app.resource.media.path: 'uploads/resources/media/'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # config/services.yaml
    acme_api.event.locale_listener:
        class: App\EventListener\LocaleListener
        arguments: [ "@request_stack", "@translator.default" ]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    acme_api.event.authentication_exception_listener:
        class: App\EventListener\AuthenticationFailureListener
        arguments: [ "@request_stack", "@translator.default" ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailure }
    acme.api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        arguments: []
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    acme_api.event.jwt_created_listener:
        class: App\EventListener\JWTCreatedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    acme_api.event.jwt_decoded_listener:
        class: App\EventListener\JWTDecodedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
    acme_api.event.jwt_invalid_listener:
        class: App\EventListener\JWTInvalidListener
        arguments: [ "@translator.default" ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }